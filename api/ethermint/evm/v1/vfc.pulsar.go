// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package evmv1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_VirtualFrontierContract          protoreflect.MessageDescriptor
	fd_VirtualFrontierContract_address  protoreflect.FieldDescriptor
	fd_VirtualFrontierContract_active   protoreflect.FieldDescriptor
	fd_VirtualFrontierContract_type     protoreflect.FieldDescriptor
	fd_VirtualFrontierContract_metadata protoreflect.FieldDescriptor
)

func init() {
	file_ethermint_evm_v1_vfc_proto_init()
	md_VirtualFrontierContract = File_ethermint_evm_v1_vfc_proto.Messages().ByName("VirtualFrontierContract")
	fd_VirtualFrontierContract_address = md_VirtualFrontierContract.Fields().ByName("address")
	fd_VirtualFrontierContract_active = md_VirtualFrontierContract.Fields().ByName("active")
	fd_VirtualFrontierContract_type = md_VirtualFrontierContract.Fields().ByName("type")
	fd_VirtualFrontierContract_metadata = md_VirtualFrontierContract.Fields().ByName("metadata")
}

var _ protoreflect.Message = (*fastReflection_VirtualFrontierContract)(nil)

type fastReflection_VirtualFrontierContract VirtualFrontierContract

func (x *VirtualFrontierContract) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VirtualFrontierContract)(x)
}

func (x *VirtualFrontierContract) slowProtoReflect() protoreflect.Message {
	mi := &file_ethermint_evm_v1_vfc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VirtualFrontierContract_messageType fastReflection_VirtualFrontierContract_messageType
var _ protoreflect.MessageType = fastReflection_VirtualFrontierContract_messageType{}

type fastReflection_VirtualFrontierContract_messageType struct{}

func (x fastReflection_VirtualFrontierContract_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VirtualFrontierContract)(nil)
}
func (x fastReflection_VirtualFrontierContract_messageType) New() protoreflect.Message {
	return new(fastReflection_VirtualFrontierContract)
}
func (x fastReflection_VirtualFrontierContract_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualFrontierContract
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VirtualFrontierContract) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualFrontierContract
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VirtualFrontierContract) Type() protoreflect.MessageType {
	return _fastReflection_VirtualFrontierContract_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VirtualFrontierContract) New() protoreflect.Message {
	return new(fastReflection_VirtualFrontierContract)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VirtualFrontierContract) Interface() protoreflect.ProtoMessage {
	return (*VirtualFrontierContract)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VirtualFrontierContract) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_VirtualFrontierContract_address, value) {
			return
		}
	}
	if x.Active != false {
		value := protoreflect.ValueOfBool(x.Active)
		if !f(fd_VirtualFrontierContract_active, value) {
			return
		}
	}
	if x.Type_ != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Type_))
		if !f(fd_VirtualFrontierContract_type, value) {
			return
		}
	}
	if len(x.Metadata) != 0 {
		value := protoreflect.ValueOfBytes(x.Metadata)
		if !f(fd_VirtualFrontierContract_metadata, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VirtualFrontierContract) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ethermint.evm.v1.VirtualFrontierContract.address":
		return x.Address != ""
	case "ethermint.evm.v1.VirtualFrontierContract.active":
		return x.Active != false
	case "ethermint.evm.v1.VirtualFrontierContract.type":
		return x.Type_ != 0
	case "ethermint.evm.v1.VirtualFrontierContract.metadata":
		return len(x.Metadata) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VirtualFrontierContract"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VirtualFrontierContract does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualFrontierContract) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ethermint.evm.v1.VirtualFrontierContract.address":
		x.Address = ""
	case "ethermint.evm.v1.VirtualFrontierContract.active":
		x.Active = false
	case "ethermint.evm.v1.VirtualFrontierContract.type":
		x.Type_ = 0
	case "ethermint.evm.v1.VirtualFrontierContract.metadata":
		x.Metadata = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VirtualFrontierContract"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VirtualFrontierContract does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VirtualFrontierContract) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ethermint.evm.v1.VirtualFrontierContract.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "ethermint.evm.v1.VirtualFrontierContract.active":
		value := x.Active
		return protoreflect.ValueOfBool(value)
	case "ethermint.evm.v1.VirtualFrontierContract.type":
		value := x.Type_
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "ethermint.evm.v1.VirtualFrontierContract.metadata":
		value := x.Metadata
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VirtualFrontierContract"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VirtualFrontierContract does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualFrontierContract) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ethermint.evm.v1.VirtualFrontierContract.address":
		x.Address = value.Interface().(string)
	case "ethermint.evm.v1.VirtualFrontierContract.active":
		x.Active = value.Bool()
	case "ethermint.evm.v1.VirtualFrontierContract.type":
		x.Type_ = (VFContractType)(value.Enum())
	case "ethermint.evm.v1.VirtualFrontierContract.metadata":
		x.Metadata = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VirtualFrontierContract"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VirtualFrontierContract does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualFrontierContract) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ethermint.evm.v1.VirtualFrontierContract.address":
		panic(fmt.Errorf("field address of message ethermint.evm.v1.VirtualFrontierContract is not mutable"))
	case "ethermint.evm.v1.VirtualFrontierContract.active":
		panic(fmt.Errorf("field active of message ethermint.evm.v1.VirtualFrontierContract is not mutable"))
	case "ethermint.evm.v1.VirtualFrontierContract.type":
		panic(fmt.Errorf("field type of message ethermint.evm.v1.VirtualFrontierContract is not mutable"))
	case "ethermint.evm.v1.VirtualFrontierContract.metadata":
		panic(fmt.Errorf("field metadata of message ethermint.evm.v1.VirtualFrontierContract is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VirtualFrontierContract"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VirtualFrontierContract does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VirtualFrontierContract) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ethermint.evm.v1.VirtualFrontierContract.address":
		return protoreflect.ValueOfString("")
	case "ethermint.evm.v1.VirtualFrontierContract.active":
		return protoreflect.ValueOfBool(false)
	case "ethermint.evm.v1.VirtualFrontierContract.type":
		return protoreflect.ValueOfEnum(0)
	case "ethermint.evm.v1.VirtualFrontierContract.metadata":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VirtualFrontierContract"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VirtualFrontierContract does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VirtualFrontierContract) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ethermint.evm.v1.VirtualFrontierContract", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VirtualFrontierContract) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualFrontierContract) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VirtualFrontierContract) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VirtualFrontierContract) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VirtualFrontierContract)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Active {
			n += 2
		}
		if x.Type_ != 0 {
			n += 1 + runtime.Sov(uint64(x.Type_))
		}
		l = len(x.Metadata)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VirtualFrontierContract)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Metadata) > 0 {
			i -= len(x.Metadata)
			copy(dAtA[i:], x.Metadata)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Metadata)))
			i--
			dAtA[i] = 0x22
		}
		if x.Type_ != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Type_))
			i--
			dAtA[i] = 0x18
		}
		if x.Active {
			i--
			if x.Active {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x10
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VirtualFrontierContract)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualFrontierContract: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualFrontierContract: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Active", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Active = bool(v != 0)
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Type_", wireType)
				}
				x.Type_ = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Type_ |= VFContractType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Metadata = append(x.Metadata[:0], dAtA[iNdEx:postIndex]...)
				if x.Metadata == nil {
					x.Metadata = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_VFBankContractMetadata           protoreflect.MessageDescriptor
	fd_VFBankContractMetadata_min_denom protoreflect.FieldDescriptor
)

func init() {
	file_ethermint_evm_v1_vfc_proto_init()
	md_VFBankContractMetadata = File_ethermint_evm_v1_vfc_proto.Messages().ByName("VFBankContractMetadata")
	fd_VFBankContractMetadata_min_denom = md_VFBankContractMetadata.Fields().ByName("min_denom")
}

var _ protoreflect.Message = (*fastReflection_VFBankContractMetadata)(nil)

type fastReflection_VFBankContractMetadata VFBankContractMetadata

func (x *VFBankContractMetadata) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VFBankContractMetadata)(x)
}

func (x *VFBankContractMetadata) slowProtoReflect() protoreflect.Message {
	mi := &file_ethermint_evm_v1_vfc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VFBankContractMetadata_messageType fastReflection_VFBankContractMetadata_messageType
var _ protoreflect.MessageType = fastReflection_VFBankContractMetadata_messageType{}

type fastReflection_VFBankContractMetadata_messageType struct{}

func (x fastReflection_VFBankContractMetadata_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VFBankContractMetadata)(nil)
}
func (x fastReflection_VFBankContractMetadata_messageType) New() protoreflect.Message {
	return new(fastReflection_VFBankContractMetadata)
}
func (x fastReflection_VFBankContractMetadata_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VFBankContractMetadata
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VFBankContractMetadata) Descriptor() protoreflect.MessageDescriptor {
	return md_VFBankContractMetadata
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VFBankContractMetadata) Type() protoreflect.MessageType {
	return _fastReflection_VFBankContractMetadata_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VFBankContractMetadata) New() protoreflect.Message {
	return new(fastReflection_VFBankContractMetadata)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VFBankContractMetadata) Interface() protoreflect.ProtoMessage {
	return (*VFBankContractMetadata)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VFBankContractMetadata) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.MinDenom != "" {
		value := protoreflect.ValueOfString(x.MinDenom)
		if !f(fd_VFBankContractMetadata_min_denom, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VFBankContractMetadata) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ethermint.evm.v1.VFBankContractMetadata.min_denom":
		return x.MinDenom != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VFBankContractMetadata"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VFBankContractMetadata does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VFBankContractMetadata) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ethermint.evm.v1.VFBankContractMetadata.min_denom":
		x.MinDenom = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VFBankContractMetadata"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VFBankContractMetadata does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VFBankContractMetadata) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ethermint.evm.v1.VFBankContractMetadata.min_denom":
		value := x.MinDenom
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VFBankContractMetadata"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VFBankContractMetadata does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VFBankContractMetadata) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ethermint.evm.v1.VFBankContractMetadata.min_denom":
		x.MinDenom = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VFBankContractMetadata"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VFBankContractMetadata does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VFBankContractMetadata) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ethermint.evm.v1.VFBankContractMetadata.min_denom":
		panic(fmt.Errorf("field min_denom of message ethermint.evm.v1.VFBankContractMetadata is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VFBankContractMetadata"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VFBankContractMetadata does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VFBankContractMetadata) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ethermint.evm.v1.VFBankContractMetadata.min_denom":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VFBankContractMetadata"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VFBankContractMetadata does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VFBankContractMetadata) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ethermint.evm.v1.VFBankContractMetadata", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VFBankContractMetadata) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VFBankContractMetadata) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VFBankContractMetadata) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VFBankContractMetadata) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VFBankContractMetadata)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.MinDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VFBankContractMetadata)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.MinDenom) > 0 {
			i -= len(x.MinDenom)
			copy(dAtA[i:], x.MinDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MinDenom)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VFBankContractMetadata)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VFBankContractMetadata: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VFBankContractMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MinDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_UpdateVirtualFrontierBankContractsProposal_3_list)(nil)

type _UpdateVirtualFrontierBankContractsProposal_3_list struct {
	list *[]*VirtualFrontierBankContractProposalContent
}

func (x *_UpdateVirtualFrontierBankContractsProposal_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_UpdateVirtualFrontierBankContractsProposal_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_UpdateVirtualFrontierBankContractsProposal_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VirtualFrontierBankContractProposalContent)
	(*x.list)[i] = concreteValue
}

func (x *_UpdateVirtualFrontierBankContractsProposal_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VirtualFrontierBankContractProposalContent)
	*x.list = append(*x.list, concreteValue)
}

func (x *_UpdateVirtualFrontierBankContractsProposal_3_list) AppendMutable() protoreflect.Value {
	v := new(VirtualFrontierBankContractProposalContent)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UpdateVirtualFrontierBankContractsProposal_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_UpdateVirtualFrontierBankContractsProposal_3_list) NewElement() protoreflect.Value {
	v := new(VirtualFrontierBankContractProposalContent)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UpdateVirtualFrontierBankContractsProposal_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_UpdateVirtualFrontierBankContractsProposal             protoreflect.MessageDescriptor
	fd_UpdateVirtualFrontierBankContractsProposal_title       protoreflect.FieldDescriptor
	fd_UpdateVirtualFrontierBankContractsProposal_description protoreflect.FieldDescriptor
	fd_UpdateVirtualFrontierBankContractsProposal_contracts   protoreflect.FieldDescriptor
)

func init() {
	file_ethermint_evm_v1_vfc_proto_init()
	md_UpdateVirtualFrontierBankContractsProposal = File_ethermint_evm_v1_vfc_proto.Messages().ByName("UpdateVirtualFrontierBankContractsProposal")
	fd_UpdateVirtualFrontierBankContractsProposal_title = md_UpdateVirtualFrontierBankContractsProposal.Fields().ByName("title")
	fd_UpdateVirtualFrontierBankContractsProposal_description = md_UpdateVirtualFrontierBankContractsProposal.Fields().ByName("description")
	fd_UpdateVirtualFrontierBankContractsProposal_contracts = md_UpdateVirtualFrontierBankContractsProposal.Fields().ByName("contracts")
}

var _ protoreflect.Message = (*fastReflection_UpdateVirtualFrontierBankContractsProposal)(nil)

type fastReflection_UpdateVirtualFrontierBankContractsProposal UpdateVirtualFrontierBankContractsProposal

func (x *UpdateVirtualFrontierBankContractsProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UpdateVirtualFrontierBankContractsProposal)(x)
}

func (x *UpdateVirtualFrontierBankContractsProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_ethermint_evm_v1_vfc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UpdateVirtualFrontierBankContractsProposal_messageType fastReflection_UpdateVirtualFrontierBankContractsProposal_messageType
var _ protoreflect.MessageType = fastReflection_UpdateVirtualFrontierBankContractsProposal_messageType{}

type fastReflection_UpdateVirtualFrontierBankContractsProposal_messageType struct{}

func (x fastReflection_UpdateVirtualFrontierBankContractsProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UpdateVirtualFrontierBankContractsProposal)(nil)
}
func (x fastReflection_UpdateVirtualFrontierBankContractsProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_UpdateVirtualFrontierBankContractsProposal)
}
func (x fastReflection_UpdateVirtualFrontierBankContractsProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateVirtualFrontierBankContractsProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateVirtualFrontierBankContractsProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) Type() protoreflect.MessageType {
	return _fastReflection_UpdateVirtualFrontierBankContractsProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) New() protoreflect.Message {
	return new(fastReflection_UpdateVirtualFrontierBankContractsProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) Interface() protoreflect.ProtoMessage {
	return (*UpdateVirtualFrontierBankContractsProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_UpdateVirtualFrontierBankContractsProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_UpdateVirtualFrontierBankContractsProposal_description, value) {
			return
		}
	}
	if len(x.Contracts) != 0 {
		value := protoreflect.ValueOfList(&_UpdateVirtualFrontierBankContractsProposal_3_list{list: &x.Contracts})
		if !f(fd_UpdateVirtualFrontierBankContractsProposal_contracts, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.title":
		return x.Title != ""
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.description":
		return x.Description != ""
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.contracts":
		return len(x.Contracts) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.title":
		x.Title = ""
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.description":
		x.Description = ""
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.contracts":
		x.Contracts = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.contracts":
		if len(x.Contracts) == 0 {
			return protoreflect.ValueOfList(&_UpdateVirtualFrontierBankContractsProposal_3_list{})
		}
		listValue := &_UpdateVirtualFrontierBankContractsProposal_3_list{list: &x.Contracts}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.title":
		x.Title = value.Interface().(string)
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.description":
		x.Description = value.Interface().(string)
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.contracts":
		lv := value.List()
		clv := lv.(*_UpdateVirtualFrontierBankContractsProposal_3_list)
		x.Contracts = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.contracts":
		if x.Contracts == nil {
			x.Contracts = []*VirtualFrontierBankContractProposalContent{}
		}
		value := &_UpdateVirtualFrontierBankContractsProposal_3_list{list: &x.Contracts}
		return protoreflect.ValueOfList(value)
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.title":
		panic(fmt.Errorf("field title of message ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal is not mutable"))
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.description":
		panic(fmt.Errorf("field description of message ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.title":
		return protoreflect.ValueOfString("")
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.description":
		return protoreflect.ValueOfString("")
	case "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.contracts":
		list := []*VirtualFrontierBankContractProposalContent{}
		return protoreflect.ValueOfList(&_UpdateVirtualFrontierBankContractsProposal_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UpdateVirtualFrontierBankContractsProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UpdateVirtualFrontierBankContractsProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Contracts) > 0 {
			for _, e := range x.Contracts {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UpdateVirtualFrontierBankContractsProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Contracts) > 0 {
			for iNdEx := len(x.Contracts) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Contracts[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UpdateVirtualFrontierBankContractsProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateVirtualFrontierBankContractsProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateVirtualFrontierBankContractsProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Contracts", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Contracts = append(x.Contracts, &VirtualFrontierBankContractProposalContent{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Contracts[len(x.Contracts)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_VirtualFrontierBankContractProposalContent                  protoreflect.MessageDescriptor
	fd_VirtualFrontierBankContractProposalContent_contract_address protoreflect.FieldDescriptor
	fd_VirtualFrontierBankContractProposalContent_active           protoreflect.FieldDescriptor
)

func init() {
	file_ethermint_evm_v1_vfc_proto_init()
	md_VirtualFrontierBankContractProposalContent = File_ethermint_evm_v1_vfc_proto.Messages().ByName("VirtualFrontierBankContractProposalContent")
	fd_VirtualFrontierBankContractProposalContent_contract_address = md_VirtualFrontierBankContractProposalContent.Fields().ByName("contract_address")
	fd_VirtualFrontierBankContractProposalContent_active = md_VirtualFrontierBankContractProposalContent.Fields().ByName("active")
}

var _ protoreflect.Message = (*fastReflection_VirtualFrontierBankContractProposalContent)(nil)

type fastReflection_VirtualFrontierBankContractProposalContent VirtualFrontierBankContractProposalContent

func (x *VirtualFrontierBankContractProposalContent) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VirtualFrontierBankContractProposalContent)(x)
}

func (x *VirtualFrontierBankContractProposalContent) slowProtoReflect() protoreflect.Message {
	mi := &file_ethermint_evm_v1_vfc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VirtualFrontierBankContractProposalContent_messageType fastReflection_VirtualFrontierBankContractProposalContent_messageType
var _ protoreflect.MessageType = fastReflection_VirtualFrontierBankContractProposalContent_messageType{}

type fastReflection_VirtualFrontierBankContractProposalContent_messageType struct{}

func (x fastReflection_VirtualFrontierBankContractProposalContent_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VirtualFrontierBankContractProposalContent)(nil)
}
func (x fastReflection_VirtualFrontierBankContractProposalContent_messageType) New() protoreflect.Message {
	return new(fastReflection_VirtualFrontierBankContractProposalContent)
}
func (x fastReflection_VirtualFrontierBankContractProposalContent_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualFrontierBankContractProposalContent
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualFrontierBankContractProposalContent
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) Type() protoreflect.MessageType {
	return _fastReflection_VirtualFrontierBankContractProposalContent_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) New() protoreflect.Message {
	return new(fastReflection_VirtualFrontierBankContractProposalContent)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) Interface() protoreflect.ProtoMessage {
	return (*VirtualFrontierBankContractProposalContent)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ContractAddress != "" {
		value := protoreflect.ValueOfString(x.ContractAddress)
		if !f(fd_VirtualFrontierBankContractProposalContent_contract_address, value) {
			return
		}
	}
	if x.Active != false {
		value := protoreflect.ValueOfBool(x.Active)
		if !f(fd_VirtualFrontierBankContractProposalContent_active, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ethermint.evm.v1.VirtualFrontierBankContractProposalContent.contract_address":
		return x.ContractAddress != ""
	case "ethermint.evm.v1.VirtualFrontierBankContractProposalContent.active":
		return x.Active != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VirtualFrontierBankContractProposalContent"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VirtualFrontierBankContractProposalContent does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ethermint.evm.v1.VirtualFrontierBankContractProposalContent.contract_address":
		x.ContractAddress = ""
	case "ethermint.evm.v1.VirtualFrontierBankContractProposalContent.active":
		x.Active = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VirtualFrontierBankContractProposalContent"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VirtualFrontierBankContractProposalContent does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ethermint.evm.v1.VirtualFrontierBankContractProposalContent.contract_address":
		value := x.ContractAddress
		return protoreflect.ValueOfString(value)
	case "ethermint.evm.v1.VirtualFrontierBankContractProposalContent.active":
		value := x.Active
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VirtualFrontierBankContractProposalContent"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VirtualFrontierBankContractProposalContent does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ethermint.evm.v1.VirtualFrontierBankContractProposalContent.contract_address":
		x.ContractAddress = value.Interface().(string)
	case "ethermint.evm.v1.VirtualFrontierBankContractProposalContent.active":
		x.Active = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VirtualFrontierBankContractProposalContent"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VirtualFrontierBankContractProposalContent does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ethermint.evm.v1.VirtualFrontierBankContractProposalContent.contract_address":
		panic(fmt.Errorf("field contract_address of message ethermint.evm.v1.VirtualFrontierBankContractProposalContent is not mutable"))
	case "ethermint.evm.v1.VirtualFrontierBankContractProposalContent.active":
		panic(fmt.Errorf("field active of message ethermint.evm.v1.VirtualFrontierBankContractProposalContent is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VirtualFrontierBankContractProposalContent"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VirtualFrontierBankContractProposalContent does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ethermint.evm.v1.VirtualFrontierBankContractProposalContent.contract_address":
		return protoreflect.ValueOfString("")
	case "ethermint.evm.v1.VirtualFrontierBankContractProposalContent.active":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ethermint.evm.v1.VirtualFrontierBankContractProposalContent"))
		}
		panic(fmt.Errorf("message ethermint.evm.v1.VirtualFrontierBankContractProposalContent does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ethermint.evm.v1.VirtualFrontierBankContractProposalContent", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VirtualFrontierBankContractProposalContent) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VirtualFrontierBankContractProposalContent)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ContractAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Active {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VirtualFrontierBankContractProposalContent)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Active {
			i--
			if x.Active {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x10
		}
		if len(x.ContractAddress) > 0 {
			i -= len(x.ContractAddress)
			copy(dAtA[i:], x.ContractAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ContractAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VirtualFrontierBankContractProposalContent)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualFrontierBankContractProposalContent: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualFrontierBankContractProposalContent: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ContractAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ContractAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Active", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Active = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: ethermint/evm/v1/vfc.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// VFContractType is the type of the virtual frontier contract
type VFContractType int32

const (
	VFContractType_VFC_TYPE_UNSPECIFIED VFContractType = 0
	// VFC_TYPE_BANK indicates the VFC is a Virtual Frontier Bank Contract
	VFContractType_VFC_TYPE_BANK VFContractType = 1
)

// Enum value maps for VFContractType.
var (
	VFContractType_name = map[int32]string{
		0: "VFC_TYPE_UNSPECIFIED",
		1: "VFC_TYPE_BANK",
	}
	VFContractType_value = map[string]int32{
		"VFC_TYPE_UNSPECIFIED": 0,
		"VFC_TYPE_BANK":        1,
	}
)

func (x VFContractType) Enum() *VFContractType {
	p := new(VFContractType)
	*p = x
	return p
}

func (x VFContractType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VFContractType) Descriptor() protoreflect.EnumDescriptor {
	return file_ethermint_evm_v1_vfc_proto_enumTypes[0].Descriptor()
}

func (VFContractType) Type() protoreflect.EnumType {
	return &file_ethermint_evm_v1_vfc_proto_enumTypes[0]
}

func (x VFContractType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VFContractType.Descriptor instead.
func (VFContractType) EnumDescriptor() ([]byte, []int) {
	return file_ethermint_evm_v1_vfc_proto_rawDescGZIP(), []int{0}
}

// VirtualFrontierContract are virtual contracts that able to call directly without actual invoking EVM.
// Prohibited to call directly from EVM.
type VirtualFrontierContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address is the contract address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// active indicate the activation of the contract. If not active, invoking methods is disabled.
	Active bool `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	// type of the virtual frontier contract
	Type_ VFContractType `protobuf:"varint,3,opt,name=type,proto3,enum=ethermint.evm.v1.VFContractType" json:"type,omitempty"`
	// metadata contains marshalled binary of the metadata of the virtual frontier contract
	Metadata []byte `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *VirtualFrontierContract) Reset() {
	*x = VirtualFrontierContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethermint_evm_v1_vfc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualFrontierContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualFrontierContract) ProtoMessage() {}

// Deprecated: Use VirtualFrontierContract.ProtoReflect.Descriptor instead.
func (*VirtualFrontierContract) Descriptor() ([]byte, []int) {
	return file_ethermint_evm_v1_vfc_proto_rawDescGZIP(), []int{0}
}

func (x *VirtualFrontierContract) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *VirtualFrontierContract) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *VirtualFrontierContract) GetType_() VFContractType {
	if x != nil {
		return x.Type_
	}
	return VFContractType_VFC_TYPE_UNSPECIFIED
}

func (x *VirtualFrontierContract) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// VFBankContractMetadata contains metadata of the Bank Contract, which represents ERC-20 contracts as proxy of the user bank assets.
// Each bank contract is represented as a single asset of user bank.
type VFBankContractMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// min_denom is the base denomination of the asset
	MinDenom string `protobuf:"bytes,1,opt,name=min_denom,json=minDenom,proto3" json:"min_denom,omitempty"`
}

func (x *VFBankContractMetadata) Reset() {
	*x = VFBankContractMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethermint_evm_v1_vfc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VFBankContractMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VFBankContractMetadata) ProtoMessage() {}

// Deprecated: Use VFBankContractMetadata.ProtoReflect.Descriptor instead.
func (*VFBankContractMetadata) Descriptor() ([]byte, []int) {
	return file_ethermint_evm_v1_vfc_proto_rawDescGZIP(), []int{1}
}

func (x *VFBankContractMetadata) GetMinDenom() string {
	if x != nil {
		return x.MinDenom
	}
	return ""
}

// UpdateVirtualFrontierBankContractsProposal is a gov Content type to update the virtual frontier bank contracts.
type UpdateVirtualFrontierBankContractsProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// title of the proposal
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// description of the proposal
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// contracts is slice of the update content for each contract
	Contracts []*VirtualFrontierBankContractProposalContent `protobuf:"bytes,3,rep,name=contracts,proto3" json:"contracts,omitempty"`
}

func (x *UpdateVirtualFrontierBankContractsProposal) Reset() {
	*x = UpdateVirtualFrontierBankContractsProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethermint_evm_v1_vfc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVirtualFrontierBankContractsProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtualFrontierBankContractsProposal) ProtoMessage() {}

// Deprecated: Use UpdateVirtualFrontierBankContractsProposal.ProtoReflect.Descriptor instead.
func (*UpdateVirtualFrontierBankContractsProposal) Descriptor() ([]byte, []int) {
	return file_ethermint_evm_v1_vfc_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateVirtualFrontierBankContractsProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateVirtualFrontierBankContractsProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateVirtualFrontierBankContractsProposal) GetContracts() []*VirtualFrontierBankContractProposalContent {
	if x != nil {
		return x.Contracts
	}
	return nil
}

// VirtualFrontierBankContractProposalContent contains the adjustment to the virtual frontier bank contract.
// Currently only used to toggle activation of the contract.
type VirtualFrontierBankContractProposalContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// contract_address that want to be updated
	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// active indicate the activation of the contract. If not active, invoking methods is disabled.
	Active bool `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *VirtualFrontierBankContractProposalContent) Reset() {
	*x = VirtualFrontierBankContractProposalContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethermint_evm_v1_vfc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualFrontierBankContractProposalContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualFrontierBankContractProposalContent) ProtoMessage() {}

// Deprecated: Use VirtualFrontierBankContractProposalContent.ProtoReflect.Descriptor instead.
func (*VirtualFrontierBankContractProposalContent) Descriptor() ([]byte, []int) {
	return file_ethermint_evm_v1_vfc_proto_rawDescGZIP(), []int{3}
}

func (x *VirtualFrontierBankContractProposalContent) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *VirtualFrontierBankContractProposalContent) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

var File_ethermint_evm_v1_vfc_proto protoreflect.FileDescriptor

var file_ethermint_evm_v1_vfc_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x65, 0x76, 0x6d, 0x2f,
	0x76, 0x31, 0x2f, 0x76, 0x66, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x14,
	0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x17, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x65, 0x76, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x46, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x16, 0x56, 0x46, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x22, 0xcc, 0x01, 0x0a, 0x2a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x69, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x74, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x3a, 0x04, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x6f, 0x0a, 0x2a, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x42, 0x61, 0x6e,
	0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x2a, 0x43, 0x0a, 0x0e, 0x56,
	0x46, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x14, 0x56, 0x46, 0x43, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x46, 0x43, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x42, 0x41, 0x4e, 0x4b, 0x10, 0x01, 0x1a, 0x04, 0x88, 0xa3, 0x1e, 0x00,
	0x42, 0xab, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x74, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x56, 0x66, 0x63, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x27, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b,
	0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x74, 0x2f, 0x65, 0x76, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x76, 0x6d, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x45, 0x45, 0x58, 0xaa, 0x02, 0x10, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74,
	0x2e, 0x45, 0x76, 0x6d, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x10, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x74, 0x5c, 0x45, 0x76, 0x6d, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1c, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x5c, 0x45, 0x76, 0x6d, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x45, 0x74, 0x68, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x74, 0x3a, 0x3a, 0x45, 0x76, 0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ethermint_evm_v1_vfc_proto_rawDescOnce sync.Once
	file_ethermint_evm_v1_vfc_proto_rawDescData = file_ethermint_evm_v1_vfc_proto_rawDesc
)

func file_ethermint_evm_v1_vfc_proto_rawDescGZIP() []byte {
	file_ethermint_evm_v1_vfc_proto_rawDescOnce.Do(func() {
		file_ethermint_evm_v1_vfc_proto_rawDescData = protoimpl.X.CompressGZIP(file_ethermint_evm_v1_vfc_proto_rawDescData)
	})
	return file_ethermint_evm_v1_vfc_proto_rawDescData
}

var file_ethermint_evm_v1_vfc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ethermint_evm_v1_vfc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ethermint_evm_v1_vfc_proto_goTypes = []interface{}{
	(VFContractType)(0),                                // 0: ethermint.evm.v1.VFContractType
	(*VirtualFrontierContract)(nil),                    // 1: ethermint.evm.v1.VirtualFrontierContract
	(*VFBankContractMetadata)(nil),                     // 2: ethermint.evm.v1.VFBankContractMetadata
	(*UpdateVirtualFrontierBankContractsProposal)(nil), // 3: ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal
	(*VirtualFrontierBankContractProposalContent)(nil), // 4: ethermint.evm.v1.VirtualFrontierBankContractProposalContent
}
var file_ethermint_evm_v1_vfc_proto_depIdxs = []int32{
	0, // 0: ethermint.evm.v1.VirtualFrontierContract.type:type_name -> ethermint.evm.v1.VFContractType
	4, // 1: ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal.contracts:type_name -> ethermint.evm.v1.VirtualFrontierBankContractProposalContent
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ethermint_evm_v1_vfc_proto_init() }
func file_ethermint_evm_v1_vfc_proto_init() {
	if File_ethermint_evm_v1_vfc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ethermint_evm_v1_vfc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualFrontierContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethermint_evm_v1_vfc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VFBankContractMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethermint_evm_v1_vfc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVirtualFrontierBankContractsProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethermint_evm_v1_vfc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualFrontierBankContractProposalContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ethermint_evm_v1_vfc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ethermint_evm_v1_vfc_proto_goTypes,
		DependencyIndexes: file_ethermint_evm_v1_vfc_proto_depIdxs,
		EnumInfos:         file_ethermint_evm_v1_vfc_proto_enumTypes,
		MessageInfos:      file_ethermint_evm_v1_vfc_proto_msgTypes,
	}.Build()
	File_ethermint_evm_v1_vfc_proto = out.File
	file_ethermint_evm_v1_vfc_proto_rawDesc = nil
	file_ethermint_evm_v1_vfc_proto_goTypes = nil
	file_ethermint_evm_v1_vfc_proto_depIdxs = nil
}
