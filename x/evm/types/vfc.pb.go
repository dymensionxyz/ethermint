// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ethermint/evm/v1/vfc.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// VFContractType is the type of the virtual frontier contract
type VFContractType int32

const (
	VFC_TYPE_UNSPECIFIED VFContractType = 0
	// VFC_TYPE_BANK indicates the VFC is a Virtual Frontier Bank Contract
	VFC_TYPE_BANK VFContractType = 1
)

var VFContractType_name = map[int32]string{
	0: "VFC_TYPE_UNSPECIFIED",
	1: "VFC_TYPE_BANK",
}

var VFContractType_value = map[string]int32{
	"VFC_TYPE_UNSPECIFIED": 0,
	"VFC_TYPE_BANK":        1,
}

func (x VFContractType) String() string {
	return proto.EnumName(VFContractType_name, int32(x))
}

func (VFContractType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bd074c454303000d, []int{0}
}

// VirtualFrontierContract are virtual contracts that able to call directly without actual invoking EVM.
// Prohibited to call directly from EVM.
type VirtualFrontierContract struct {
	// address is the contract address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// active indicate the activation of the contract. If not active, invoking methods is disabled.
	Active bool `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	// type of the virtual frontier contract
	Type VFContractType `protobuf:"varint,3,opt,name=type,proto3,enum=ethermint.evm.v1.VFContractType" json:"type,omitempty"`
	// metadata contains marshalled binary of the metadata of the virtual frontier contract
	Metadata []byte `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (m *VirtualFrontierContract) Reset()         { *m = VirtualFrontierContract{} }
func (m *VirtualFrontierContract) String() string { return proto.CompactTextString(m) }
func (*VirtualFrontierContract) ProtoMessage()    {}
func (*VirtualFrontierContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd074c454303000d, []int{0}
}
func (m *VirtualFrontierContract) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VirtualFrontierContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VirtualFrontierContract.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VirtualFrontierContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualFrontierContract.Merge(m, src)
}
func (m *VirtualFrontierContract) XXX_Size() int {
	return m.Size()
}
func (m *VirtualFrontierContract) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualFrontierContract.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualFrontierContract proto.InternalMessageInfo

func (m *VirtualFrontierContract) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *VirtualFrontierContract) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *VirtualFrontierContract) GetType() VFContractType {
	if m != nil {
		return m.Type
	}
	return VFC_TYPE_UNSPECIFIED
}

func (m *VirtualFrontierContract) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// VFBankContractMetadata contains metadata of the Bank Contract, which represents ERC-20 contracts as proxy of the user bank assets.
// Each bank contract is represented as a single asset of user bank.
type VFBankContractMetadata struct {
	// min_denom is the base denomination of the asset
	MinDenom string `protobuf:"bytes,1,opt,name=min_denom,json=minDenom,proto3" json:"min_denom,omitempty"`
}

func (m *VFBankContractMetadata) Reset()         { *m = VFBankContractMetadata{} }
func (m *VFBankContractMetadata) String() string { return proto.CompactTextString(m) }
func (*VFBankContractMetadata) ProtoMessage()    {}
func (*VFBankContractMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd074c454303000d, []int{1}
}
func (m *VFBankContractMetadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VFBankContractMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VFBankContractMetadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VFBankContractMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VFBankContractMetadata.Merge(m, src)
}
func (m *VFBankContractMetadata) XXX_Size() int {
	return m.Size()
}
func (m *VFBankContractMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_VFBankContractMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_VFBankContractMetadata proto.InternalMessageInfo

func (m *VFBankContractMetadata) GetMinDenom() string {
	if m != nil {
		return m.MinDenom
	}
	return ""
}

// UpdateVirtualFrontierBankContractsProposal is a gov Content type to update the virtual frontier bank contracts.
type UpdateVirtualFrontierBankContractsProposal struct {
	// title of the proposal
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// description of the proposal
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// contracts is slice of the update content for each contract
	Contracts []VirtualFrontierBankContractProposalContent `protobuf:"bytes,3,rep,name=contracts,proto3" json:"contracts"`
}

func (m *UpdateVirtualFrontierBankContractsProposal) Reset() {
	*m = UpdateVirtualFrontierBankContractsProposal{}
}
func (m *UpdateVirtualFrontierBankContractsProposal) String() string {
	return proto.CompactTextString(m)
}
func (*UpdateVirtualFrontierBankContractsProposal) ProtoMessage() {}
func (*UpdateVirtualFrontierBankContractsProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd074c454303000d, []int{2}
}
func (m *UpdateVirtualFrontierBankContractsProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateVirtualFrontierBankContractsProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateVirtualFrontierBankContractsProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateVirtualFrontierBankContractsProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVirtualFrontierBankContractsProposal.Merge(m, src)
}
func (m *UpdateVirtualFrontierBankContractsProposal) XXX_Size() int {
	return m.Size()
}
func (m *UpdateVirtualFrontierBankContractsProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVirtualFrontierBankContractsProposal.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVirtualFrontierBankContractsProposal proto.InternalMessageInfo

func (m *UpdateVirtualFrontierBankContractsProposal) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateVirtualFrontierBankContractsProposal) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateVirtualFrontierBankContractsProposal) GetContracts() []VirtualFrontierBankContractProposalContent {
	if m != nil {
		return m.Contracts
	}
	return nil
}

// VirtualFrontierBankContractProposalContent contains the adjustment to the virtual frontier bank contract.
// Currently only used to toggle activation of the contract.
type VirtualFrontierBankContractProposalContent struct {
	// contract_address that want to be updated
	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// active indicate the activation of the contract. If not active, invoking methods is disabled.
	Active bool `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
}

func (m *VirtualFrontierBankContractProposalContent) Reset() {
	*m = VirtualFrontierBankContractProposalContent{}
}
func (m *VirtualFrontierBankContractProposalContent) String() string {
	return proto.CompactTextString(m)
}
func (*VirtualFrontierBankContractProposalContent) ProtoMessage() {}
func (*VirtualFrontierBankContractProposalContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd074c454303000d, []int{3}
}
func (m *VirtualFrontierBankContractProposalContent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VirtualFrontierBankContractProposalContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VirtualFrontierBankContractProposalContent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VirtualFrontierBankContractProposalContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualFrontierBankContractProposalContent.Merge(m, src)
}
func (m *VirtualFrontierBankContractProposalContent) XXX_Size() int {
	return m.Size()
}
func (m *VirtualFrontierBankContractProposalContent) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualFrontierBankContractProposalContent.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualFrontierBankContractProposalContent proto.InternalMessageInfo

func (m *VirtualFrontierBankContractProposalContent) GetContractAddress() string {
	if m != nil {
		return m.ContractAddress
	}
	return ""
}

func (m *VirtualFrontierBankContractProposalContent) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func init() {
	proto.RegisterEnum("ethermint.evm.v1.VFContractType", VFContractType_name, VFContractType_value)
	proto.RegisterType((*VirtualFrontierContract)(nil), "ethermint.evm.v1.VirtualFrontierContract")
	proto.RegisterType((*VFBankContractMetadata)(nil), "ethermint.evm.v1.VFBankContractMetadata")
	proto.RegisterType((*UpdateVirtualFrontierBankContractsProposal)(nil), "ethermint.evm.v1.UpdateVirtualFrontierBankContractsProposal")
	proto.RegisterType((*VirtualFrontierBankContractProposalContent)(nil), "ethermint.evm.v1.VirtualFrontierBankContractProposalContent")
}

func init() { proto.RegisterFile("ethermint/evm/v1/vfc.proto", fileDescriptor_bd074c454303000d) }

var fileDescriptor_bd074c454303000d = []byte{
	// 460 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x6e, 0xd3, 0x4c,
	0x14, 0xc5, 0x3d, 0x5f, 0xfc, 0x95, 0xe4, 0x16, 0x4a, 0x18, 0x45, 0xc5, 0x0a, 0x92, 0x6b, 0x65,
	0x81, 0x4c, 0x16, 0xb6, 0x5a, 0x60, 0x83, 0x58, 0xd0, 0xa4, 0xb1, 0x54, 0x21, 0xaa, 0xc8, 0xb4,
	0x91, 0x60, 0x13, 0xa6, 0xf6, 0x90, 0x8e, 0x88, 0x67, 0xac, 0xf1, 0xad, 0x45, 0xdf, 0x80, 0x25,
	0x2f, 0x80, 0x84, 0xc4, 0xcb, 0x74, 0xc1, 0xa2, 0x4b, 0x56, 0x08, 0x25, 0x1b, 0x1e, 0x03, 0xd9,
	0x8d, 0xd3, 0x3f, 0x02, 0xc4, 0xce, 0x67, 0xce, 0xf5, 0x4f, 0xe7, 0xea, 0x1e, 0x68, 0x73, 0x3c,
	0xe2, 0x3a, 0x11, 0x12, 0x7d, 0x9e, 0x27, 0x7e, 0xbe, 0xe9, 0xe7, 0x6f, 0x23, 0x2f, 0xd5, 0x0a,
	0x15, 0x6d, 0x2e, 0x3d, 0x8f, 0xe7, 0x89, 0x97, 0x6f, 0xb6, 0x5b, 0x13, 0x35, 0x51, 0xa5, 0xe9,
	0x17, 0x5f, 0xe7, 0x73, 0x9d, 0x4f, 0x04, 0xee, 0x8e, 0x84, 0xc6, 0x63, 0x36, 0x0d, 0xb4, 0x92,
	0x28, 0xb8, 0xee, 0x2b, 0x89, 0x9a, 0x45, 0x48, 0x2d, 0xb8, 0xc1, 0xe2, 0x58, 0xf3, 0x2c, 0xb3,
	0x88, 0x43, 0xdc, 0x46, 0x58, 0x49, 0xba, 0x0e, 0x2b, 0x2c, 0x42, 0x91, 0x73, 0xeb, 0x3f, 0x87,
	0xb8, 0xf5, 0x70, 0xa1, 0xe8, 0x23, 0x30, 0xf1, 0x24, 0xe5, 0x56, 0xcd, 0x21, 0xee, 0xda, 0x96,
	0xe3, 0x5d, 0x0f, 0xe1, 0x8d, 0x82, 0x8a, 0xbe, 0x7f, 0x92, 0xf2, 0xb0, 0x9c, 0xa6, 0x6d, 0xa8,
	0x27, 0x1c, 0x59, 0xcc, 0x90, 0x59, 0xa6, 0x43, 0xdc, 0x9b, 0xe1, 0x52, 0x77, 0x1e, 0xc3, 0xfa,
	0x28, 0xe8, 0x31, 0xf9, 0xae, 0xfa, 0xef, 0xc5, 0xc2, 0xa1, 0xf7, 0xa0, 0x91, 0x08, 0x39, 0x8e,
	0xb9, 0x54, 0xc9, 0x22, 0x5f, 0x3d, 0x11, 0x72, 0xa7, 0xd0, 0x9d, 0xaf, 0x04, 0xba, 0x07, 0x69,
	0xcc, 0x90, 0x5f, 0x5b, 0xee, 0x32, 0x2a, 0x1b, 0x6a, 0x95, 0xaa, 0x8c, 0x4d, 0x69, 0x0b, 0xfe,
	0x47, 0x81, 0x53, 0xbe, 0xe0, 0x9c, 0x0b, 0xea, 0xc0, 0x6a, 0xcc, 0xb3, 0x48, 0x8b, 0x14, 0x85,
	0x92, 0xe5, 0xaa, 0x8d, 0xf0, 0xf2, 0x13, 0x7d, 0x03, 0x8d, 0xa8, 0x82, 0x59, 0x35, 0xa7, 0xe6,
	0xae, 0x6e, 0x3d, 0xfd, 0xcd, 0xd2, 0x7f, 0x8e, 0x50, 0x25, 0x28, 0x34, 0x97, 0xd8, 0x33, 0x4f,
	0xbf, 0x6f, 0x18, 0xe1, 0x05, 0xf4, 0x89, 0xf9, 0xf3, 0xf3, 0x86, 0xd1, 0x51, 0xd0, 0xfd, 0x77,
	0x08, 0x7d, 0x00, 0xcd, 0x0a, 0x30, 0xbe, 0x7a, 0xc0, 0xdb, 0xd5, 0xfb, 0xf6, 0xdf, 0x0f, 0xd9,
	0xed, 0xc3, 0xda, 0xd5, 0x53, 0x51, 0x0b, 0x5a, 0xa3, 0xa0, 0x3f, 0xde, 0x7f, 0x35, 0x1c, 0x8c,
	0x0f, 0xf6, 0x5e, 0x0e, 0x07, 0xfd, 0xdd, 0x60, 0x77, 0xb0, 0xd3, 0x34, 0xe8, 0x1d, 0xb8, 0xb5,
	0x74, 0x7a, 0xdb, 0x7b, 0xcf, 0x9b, 0xa4, 0x6d, 0x7e, 0xf8, 0x62, 0x1b, 0xbd, 0x67, 0xa7, 0x33,
	0x9b, 0x9c, 0xcd, 0x6c, 0xf2, 0x63, 0x66, 0x93, 0x8f, 0x73, 0xdb, 0x38, 0x9b, 0xdb, 0xc6, 0xb7,
	0xb9, 0x6d, 0xbc, 0xbe, 0x3f, 0x11, 0x78, 0x74, 0x7c, 0xe8, 0x45, 0x2a, 0x29, 0xaa, 0xab, 0x32,
	0xff, 0xa2, 0xca, 0xef, 0xcb, 0x32, 0x17, 0xc5, 0xc8, 0x0e, 0x57, 0xca, 0x92, 0x3e, 0xfc, 0x15,
	0x00, 0x00, 0xff, 0xff, 0xcb, 0x45, 0xa2, 0xa6, 0xea, 0x02, 0x00, 0x00,
}

func (m *VirtualFrontierContract) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VirtualFrontierContract) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VirtualFrontierContract) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Metadata) > 0 {
		i -= len(m.Metadata)
		copy(dAtA[i:], m.Metadata)
		i = encodeVarintVfc(dAtA, i, uint64(len(m.Metadata)))
		i--
		dAtA[i] = 0x22
	}
	if m.Type != 0 {
		i = encodeVarintVfc(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x18
	}
	if m.Active {
		i--
		if m.Active {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintVfc(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VFBankContractMetadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VFBankContractMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VFBankContractMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MinDenom) > 0 {
		i -= len(m.MinDenom)
		copy(dAtA[i:], m.MinDenom)
		i = encodeVarintVfc(dAtA, i, uint64(len(m.MinDenom)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateVirtualFrontierBankContractsProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateVirtualFrontierBankContractsProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateVirtualFrontierBankContractsProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Contracts) > 0 {
		for iNdEx := len(m.Contracts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Contracts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintVfc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintVfc(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintVfc(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VirtualFrontierBankContractProposalContent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VirtualFrontierBankContractProposalContent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VirtualFrontierBankContractProposalContent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Active {
		i--
		if m.Active {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.ContractAddress) > 0 {
		i -= len(m.ContractAddress)
		copy(dAtA[i:], m.ContractAddress)
		i = encodeVarintVfc(dAtA, i, uint64(len(m.ContractAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintVfc(dAtA []byte, offset int, v uint64) int {
	offset -= sovVfc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *VirtualFrontierContract) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovVfc(uint64(l))
	}
	if m.Active {
		n += 2
	}
	if m.Type != 0 {
		n += 1 + sovVfc(uint64(m.Type))
	}
	l = len(m.Metadata)
	if l > 0 {
		n += 1 + l + sovVfc(uint64(l))
	}
	return n
}

func (m *VFBankContractMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MinDenom)
	if l > 0 {
		n += 1 + l + sovVfc(uint64(l))
	}
	return n
}

func (m *UpdateVirtualFrontierBankContractsProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovVfc(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovVfc(uint64(l))
	}
	if len(m.Contracts) > 0 {
		for _, e := range m.Contracts {
			l = e.Size()
			n += 1 + l + sovVfc(uint64(l))
		}
	}
	return n
}

func (m *VirtualFrontierBankContractProposalContent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ContractAddress)
	if l > 0 {
		n += 1 + l + sovVfc(uint64(l))
	}
	if m.Active {
		n += 2
	}
	return n
}

func sovVfc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozVfc(x uint64) (n int) {
	return sovVfc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *VirtualFrontierContract) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowVfc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VirtualFrontierContract: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VirtualFrontierContract: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVfc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthVfc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthVfc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Active", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVfc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Active = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVfc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= VFContractType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVfc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthVfc
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthVfc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = append(m.Metadata[:0], dAtA[iNdEx:postIndex]...)
			if m.Metadata == nil {
				m.Metadata = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipVfc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthVfc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VFBankContractMetadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowVfc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VFBankContractMetadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VFBankContractMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinDenom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVfc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthVfc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthVfc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MinDenom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipVfc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthVfc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateVirtualFrontierBankContractsProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowVfc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateVirtualFrontierBankContractsProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateVirtualFrontierBankContractsProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVfc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthVfc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthVfc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVfc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthVfc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthVfc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contracts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVfc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthVfc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthVfc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contracts = append(m.Contracts, VirtualFrontierBankContractProposalContent{})
			if err := m.Contracts[len(m.Contracts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipVfc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthVfc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VirtualFrontierBankContractProposalContent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowVfc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VirtualFrontierBankContractProposalContent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VirtualFrontierBankContractProposalContent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVfc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthVfc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthVfc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Active", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVfc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Active = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipVfc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthVfc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipVfc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowVfc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowVfc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowVfc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthVfc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupVfc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthVfc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthVfc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowVfc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupVfc = fmt.Errorf("proto: unexpected end of group")
)
